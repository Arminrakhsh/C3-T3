library(readr)
existingproductattributes2017 <- read_csv("C:/Users/Armin/Desktop/Data Analytics/C3 T3/existingproductattributes2017.csv")
View(existingproductattributes2017)
library(readr)
newproductattributes2017 <- read_csv("C:/Users/Armin/Desktop/Data Analytics/C3 T3/newproductattributes2017.csv")
View(newproductattributes2017)
View(existingproductattributes2017)
View(newproductattributes2017)
View(existingproductattributes2017)
# Dummify the data
newDataFrame <- dummyVars(" ~ .", data = existingproductattributes2017)
level(ProductType)
levels(ProductType)
library(caret)
newDataFrame <- dummyVars(" ~ .", data = existingproductattributes2017)
ProductType
newDataFrame
readyData <- data.frame(predict(newDataFrame, newdata = existingproductattributes2017))
readyData
View(readyData)
str(readyData)
summary(readydata)
summary(readyData)
readyData$BestSellersRank <- NULL
readyData
summary(readData)
summary(readyData)
corrData <- cor(readyData)
corrData
install.packages("corrplot")
library(corrplot)
corrplot(corrData)
save.image("~/C3 T3/C3 T3.Rproj.RData")
View(readyData)
library(readr)
existingproductattributes2017 <- read_csv("C:/Users/Armin/Desktop/Data Analytics/C3 T3/existingproductattributes2017.csv")
View(existingproductattributes2017)
library(readr)
newproductattributes2017 <- read_csv("C:/Users/Armin/Desktop/Data Analytics/C3 T3/newproductattributes2017.csv")
View(newproductattributes2017)
View(existingproductattributes2017)
View(newproductattributes2017)
View(existingproductattributes2017)
# Dummify the data
newDataFrame <- dummyVars(" ~ .", data = existingproductattributes2017)
level(ProductType)
levels(ProductType)
library(caret)
newDataFrame <- dummyVars(" ~ .", data = existingproductattributes2017)
ProductType
newDataFrame
readyData <- data.frame(predict(newDataFrame, newdata = existingproductattributes2017))
readyData
View(readyData)
str(readyData)
summary(readydata)
summary(readyData)
readyData$BestSellersRank <- NULL
readyData
summary(readData)
summary(readyData)
corrData <- cor(readyData)
corrData
install.packages("corrplot")
library(corrplot)
corrplot(corrData)
save.image("~/C3 T3/C3 T3.Rproj.RData")
View(readyData)
View(corrData)
View(corrData)
# To remove Product price and Number
readyData$ProductNum <- NULL
readyData$Price <- NULL
summary(readyData)
View(readyData)
set.seed(123)
trainSize<-round(nrow(readyData)*0.7)
testSize<-nrow(readyData)-trainSize
training_indices<-sample(seq_len(nrow(readyData)),size =trainSize)
trainSet<-readyData[training_indices,]
testSet<-readyData[-training_indices,]
# Linear regression
LM <= lm(Volume~.,trainSet)
LM <- lm(Volume~.,trainSet)
summary(LM)
readyData
summary(readyData)
plot(LM)
fitControl <- trainControl(method = "repeatedcv", number = 10, repeats = 1)
#train Random Forest Regression model with a tuneLenght = 1 (trains with 1 mtry value for RandomForest)
rfFit1 <- train(Volume~., data = trainSet, method = "rf", trControl=fitControl, tuneLength = 1
gbFit1 <- train(Volume~., data = trainSet, method = "gbm", trControl=fitControl, tuneLength = 1)
rfFit1 <- train(Volume~., data = trainSet, method = "rf", trControl=fitControl, tuneLength = 1)
svmFit1 <- train(Volume~., data = trainSet, method = "svmLinear", trControl=fitControl, tuneLength = 1)
gbFit1
summary(gbFit1)
rfFit1
svmFit1
save.image("~/C3 T3/C3 T3.Rproj.RData")
load("~/C3 T2/C3 T2.Rproj.RData")
